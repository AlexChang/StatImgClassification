Best parameters set found on training set:
{'tol': 0.01, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
Grid scores on training set:
0.97731 (+/-0.00998) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.001, 'loss': 'squared_hinge', 'dual': False}
0.97731 (+/-0.00998) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.001, 'loss': 'squared_hinge', 'dual': False}
0.97731 (+/-0.00998) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.001, 'loss': 'squared_hinge', 'dual': False}
0.97731 (+/-0.00998) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.001, 'loss': 'squared_hinge', 'dual': False}
0.98333 (+/-0.00983) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.001, 'loss': 'squared_hinge', 'dual': False}
0.98333 (+/-0.00983) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.001, 'loss': 'squared_hinge', 'dual': False}
0.98333 (+/-0.00983) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.001, 'loss': 'squared_hinge', 'dual': False}
0.98333 (+/-0.00983) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.001, 'loss': 'squared_hinge', 'dual': False}
0.98410 (+/-0.01092) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
0.98410 (+/-0.01092) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
0.98410 (+/-0.01092) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
0.98410 (+/-0.01092) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
0.98500 (+/-0.01050) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
0.98474 (+/-0.01083) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
0.98474 (+/-0.01083) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
0.98474 (+/-0.01083) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.01, 'loss': 'squared_hinge', 'dual': False}
0.98462 (+/-0.01103) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.1, 'loss': 'squared_hinge', 'dual': False}
0.98385 (+/-0.01184) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.1, 'loss': 'squared_hinge', 'dual': False}
0.98397 (+/-0.01181) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.1, 'loss': 'squared_hinge', 'dual': False}
0.98397 (+/-0.01181) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l1', 'C': 0.1, 'loss': 'squared_hinge', 'dual': False}
0.98321 (+/-0.01074) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.1, 'loss': 'squared_hinge', 'dual': False}
0.98321 (+/-0.01092) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.1, 'loss': 'squared_hinge', 'dual': False}
0.98308 (+/-0.01114) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.1, 'loss': 'squared_hinge', 'dual': False}
0.98308 (+/-0.01114) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l2', 'C': 0.1, 'loss': 'squared_hinge', 'dual': False}
0.97974 (+/-0.01174) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l1', 'C': 1, 'loss': 'squared_hinge', 'dual': False}
0.97782 (+/-0.00890) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l1', 'C': 1, 'loss': 'squared_hinge', 'dual': False}
0.97769 (+/-0.00954) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l1', 'C': 1, 'loss': 'squared_hinge', 'dual': False}
0.97731 (+/-0.00927) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l1', 'C': 1, 'loss': 'squared_hinge', 'dual': False}
0.97923 (+/-0.01018) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l2', 'C': 1, 'loss': 'squared_hinge', 'dual': False}
0.97949 (+/-0.00986) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l2', 'C': 1, 'loss': 'squared_hinge', 'dual': False}
0.97897 (+/-0.00978) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l2', 'C': 1, 'loss': 'squared_hinge', 'dual': False}
0.97885 (+/-0.01051) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l2', 'C': 1, 'loss': 'squared_hinge', 'dual': False}
0.97885 (+/-0.01048) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l1', 'C': 10, 'loss': 'squared_hinge', 'dual': False}
0.97282 (+/-0.00797) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l1', 'C': 10, 'loss': 'squared_hinge', 'dual': False}
0.97397 (+/-0.00529) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l1', 'C': 10, 'loss': 'squared_hinge', 'dual': False}
0.97321 (+/-0.00646) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l1', 'C': 10, 'loss': 'squared_hinge', 'dual': False}
0.97987 (+/-0.01018) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l2', 'C': 10, 'loss': 'squared_hinge', 'dual': False}
0.97692 (+/-0.01038) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l2', 'C': 10, 'loss': 'squared_hinge', 'dual': False}
0.97526 (+/-0.01114) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l2', 'C': 10, 'loss': 'squared_hinge', 'dual': False}
0.97423 (+/-0.01098) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l2', 'C': 10, 'loss': 'squared_hinge', 'dual': False}
0.97885 (+/-0.01048) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l1', 'C': 100, 'loss': 'squared_hinge', 'dual': False}
0.97244 (+/-0.00761) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l1', 'C': 100, 'loss': 'squared_hinge', 'dual': False}
0.97154 (+/-0.00789) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l1', 'C': 100, 'loss': 'squared_hinge', 'dual': False}
0.97423 (+/-0.00666) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l1', 'C': 100, 'loss': 'squared_hinge', 'dual': False}
0.97923 (+/-0.01068) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l2', 'C': 100, 'loss': 'squared_hinge', 'dual': False}
0.97603 (+/-0.00992) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l2', 'C': 100, 'loss': 'squared_hinge', 'dual': False}
0.97333 (+/-0.00958) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l2', 'C': 100, 'loss': 'squared_hinge', 'dual': False}
0.97269 (+/-0.01028) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l2', 'C': 100, 'loss': 'squared_hinge', 'dual': False}
0.97846 (+/-0.01096) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l1', 'C': 1000, 'loss': 'squared_hinge', 'dual': False}
0.97269 (+/-0.00691) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l1', 'C': 1000, 'loss': 'squared_hinge', 'dual': False}
0.97167 (+/-0.00762) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l1', 'C': 1000, 'loss': 'squared_hinge', 'dual': False}
0.97179 (+/-0.00721) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l1', 'C': 1000, 'loss': 'squared_hinge', 'dual': False}
0.97872 (+/-0.00908) for {'tol': 0.01, 'max_iter': 10000, 'penalty': 'l2', 'C': 1000, 'loss': 'squared_hinge', 'dual': False}
0.97615 (+/-0.00901) for {'tol': 0.001, 'max_iter': 10000, 'penalty': 'l2', 'C': 1000, 'loss': 'squared_hinge', 'dual': False}
0.97269 (+/-0.01015) for {'tol': 0.0001, 'max_iter': 10000, 'penalty': 'l2', 'C': 1000, 'loss': 'squared_hinge', 'dual': False}
0.97256 (+/-0.00937) for {'tol': 1e-05, 'max_iter': 10000, 'penalty': 'l2', 'C': 1000, 'loss': 'squared_hinge', 'dual': False}
